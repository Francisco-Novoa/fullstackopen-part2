{"version":3,"sources":["services/numbers.js","components/displaycontacts.js","components/controledinput.js","components/newcontact.js","components/notification.js","App.js","index.js"],"names":["baseUrl","axios","get","catch","error","console","log","then","response","data","newObject","post","id","setError","name","delete","put","TableRow","person","remove","number","onClick","DisplayPhonebooks","persons","undefined","map","i","key","ControlledInput","value","onChange","label","className","style","display","e","target","NewContact","newName","setNewName","newPhone","setNewPhone","HandleSubmit","Notification","message","classes","Title","text","App","useState","setPersons","filtered","SetFiltered","filter","setFilter","errorGood","setErrorGood","errorBad","setErrorBad","useEffect","PhonebookService","initialNotes","a","aux","elem","toLowerCase","includes","preventDefault","found","find","returned","push","setTimeout","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8cb44b8.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  .catch(error=>{console.log(error);return error})\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request= axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id, setError, name) =>{\r\n    const request=axios.delete(`${baseUrl}/${id}`)\r\n    request.then(console.log)\r\n    .catch(error=>{\r\n        setError(`the contact '${name}' was already deleted from server`)\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nconst update =( id,newObject )=>{\r\n    const request=axios.put(`${baseUrl}/${id}`, newObject)\r\n    request.then(console.log)\r\n}\r\n\r\nexport default { getAll,  create, remove, update }","import React from \"react\"\r\n\r\nconst TableRow = ({ person, remove }) => {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          {person.name}\r\n        </td>\r\n        <td>\r\n          #{person.number}\r\n        </td>\r\n        <td>\r\n          <button onClick={() => { remove(person.id, person.name) }}>\r\n            remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\nconst DisplayPhonebooks = ({ persons, remove }) => {\r\n    return (\r\n      <table>\r\n  \r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Names\r\n            </th>\r\n            <th>\r\n              Number\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n  \r\n        <tbody>\r\n          {persons!==null&&persons!==undefined?\r\n            persons.map((person, i) => {\r\n              return (<TableRow person={person} key={person.id} remove={remove} />)\r\n            })\r\n            :null\r\n          }\r\n        </tbody>\r\n  \r\n      </table>\r\n    )\r\n  }\r\n  \r\n  export default DisplayPhonebooks","import React from \"react\"\r\n\r\nconst ControlledInput = ({ value, onChange, label }) => {\r\n    return (\r\n      <div>\r\n        <div className=\"bigly\" >\r\n          {label}:\r\n        </div>\r\n        <div style={{ display: \"inline-block\" }}>\r\n          <input value={value} onChange={(e) => { onChange(e.target.value) }} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default ControlledInput","import React from \"react\"\r\nimport ControlledInput from \"./controledinput\"\r\n\r\n\r\nconst NewContact = ({ newName, setNewName, newPhone, setNewPhone, HandleSubmit }) => {\r\n    return (\r\n      <form>\r\n  \r\n        <ControlledInput\r\n          value={newName}\r\n          onChange={setNewName}\r\n          label={\"Name\"} />\r\n  \r\n        <ControlledInput\r\n          value={newPhone}\r\n          onChange={setNewPhone}\r\n          label={\"Number\"} />\r\n  \r\n        <div\r\n            >\r\n          <button\r\n            className=\"newcontact\"\r\n            onClick={(e) => { HandleSubmit(e) }}>\r\n            add\r\n            </button>\r\n        </div>\r\n  \r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default NewContact","import React from \"react\"\r\n\r\nconst Notification = ({ message, classes }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={classes}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PhonebookService from \"./services/numbers\"\nimport DisplayPhonebooks from \"./components/displaycontacts\"\nimport ControlledInput from \"./components/controledinput\"\nimport NewContact from \"./components/newcontact\"\nimport Notification from \"./components/notification\"\n\nconst Title = ({ text }) => {\n  return (\n    <h2>{text}</h2>\n  )\n}\n\nconst App = () => {\n\n  //States\n  //this one acts as database keeping all the phone numbers\n  const [persons, setPersons] = useState([])\n\n  //this one acts as the filtered result that is actually shown\n  const [filtered, SetFiltered] = useState([])\n\n  //this one keeps the filter keyword\n  const [filter, setFilter] = useState(\"\")\n\n  //this one keeps an error log\n  const [errorGood, setErrorGood] = useState(null)\n  const [errorBad, setErrorBad] = useState(null)\n\n  //this two keep the inputs\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState(\"\")\n\n\n  //handlers\n  const HandleSubmit = (e) => {\n    e.preventDefault()\n    let aux = [...persons]\n    if (newName !== \"\" && newPhone !== \"\") {\n      //if both imputs are not empty\n\n      let found = aux.find((person) => person.name === newName)\n      //find if the name is already in persons\n\n      if (found === undefined) {\n        //if is not, add the new element to persons and the filtered version  \n\n        PhonebookService\n          .create({\n            \"name\": newName,\n            \"number\": newPhone\n          })\n          .then((returned) => {\n            aux.push(\n              returned\n            )\n            setPersons(aux)\n            SetFiltered(aux)\n            setErrorGood(`Added '${newName}'`)\n            setTimeout(() => { setErrorGood(null) }, 5000)\n          })\n\n        //here we clean up the imputs\n        setNewName(\"\")\n        setNewPhone(\"\")\n      }\n      else {\n        //if it is show the alert\n        let result = window.confirm(`${newName} is already added to the phonebook, do you want to replace it?`);\n        if (result) {\n          PhonebookService.update(found.id, {\n            \"name\": newName,\n            \"number\": newPhone\n          })\n          PhonebookService\n            .getAll()\n            .then(data => {\n              setPersons(data)\n              SetFiltered(data)\n            })\n        }\n      }\n    }\n    else {\n      window.confirm(`you need to fill both Name and Number fields`)\n    }\n  }\n\n  const handleFilter = (a) => {\n    setFilter(a)\n    //save the keyword\n    let aux = persons.filter((elem) => { return (elem.name.toLowerCase().includes(a.toLowerCase())) })\n    //find if there is a match\n    SetFiltered(aux)\n    //saves the filtered result\n  }\n\n  const handleRemove = (id, name) => {\n    let result = window.confirm(`do you want to delete ${name}?`);\n    if (result) {\n      PhonebookService.remove(id, setErrorBad, name)\n      PhonebookService\n        .getAll()\n        .then(initialNotes => {\n          setPersons(initialNotes)\n          SetFiltered(initialNotes)\n        })\n      setTimeout(() => { setErrorBad(null) }, 5000)\n    }\n\n  }\n\n\n  \n  //useEffects\n  useEffect(() => {\n    PhonebookService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n        SetFiltered(initialNotes)\n      })\n  }, [])\n\n\n\n  return (\n    <div className=\"wrapper\">\n\n      <Title text=\"Phonebook.\" />\n\n      <ControlledInput\n        value={filter}\n        onChange={handleFilter}\n        label={\"Filter shown with\"}\n      />\n\n      <Title text=\"Add a new contact.\" />\n\n      <Notification message={errorGood} classes=\"good\" />\n      <Notification message={errorBad} classes=\"bad\" />\n\n      <NewContact\n        newName={newName}\n        setNewName={setNewName}\n        newPhone={newPhone}\n        setNewPhone={setNewPhone}\n        HandleSubmit={HandleSubmit}\n      />\n\n      <Title text=\"Numbers.\" />\n\n      <DisplayPhonebooks\n        persons={filtered}\n        remove={handleRemove}\n      />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}